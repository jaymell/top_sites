import geopy

geoList = ['geopy.geocoders.arcgis.ArcGIS', 'geopy.geocoders.baidu.Baidu', 'geopy.geocoders.bing.Bing', 'geopy.geocoders.databc.DataBC', 'geopy.geocoders.dot_us.GeocoderDotUS', 'geopy.geocoders.geocodefarm.GeocodeFarm', 'geopy.geocoders.geonames.GeoNames', 'geopy.geocoders.googlev3.GoogleV3', 'geopy.geocoders.ignfrance.IGNFrance', 'geopy.geocoders.navidata.NaviData', 'geopy.geocoders.opencage.OpenCage', 'geopy.geocoders.openmapquest.OpenMapQuest', 'geopy.geocoders.osm.Nominatim', 'geopy.geocoders.placefinder.YahooPlaceFinder', 'geopy.geocoders.smartystreets.LiveAddress', 'geopy.geocoders.what3words.What3Words', 'geopy.geocoders.yandex.Yandex']

n = []
for i in geoList:
     try:
             obj = eval(i)()
	     b = obj.geocode('3913 Bandera Plano, TX')
     except Exception as e:
             #print('Failed: %s -- %s' % (i,e))
	     pass
     else:
	     n.append(i)


# list w/ non-working stuff removed:
geoList = ['geopy.geocoders.arcgis.ArcGIS', 'geopy.geocoders.dot_us.GeocoderDotUS', 'geopy.geocoders.geocodefarm.GeocodeFarm', 'geopy.geocoders.googlev3.GoogleV3', 'geopy.geocoders.navidata.NaviData', 'geopy.geocoders.openmapquest.OpenMapQuest', 'geopy.geocoders.osm.Nominatim', 'geopy.geocoders.yandex.Yandex']


for i in geoList:
	print('\n%s' % i)
	obj = eval(i)()
	obj.geocode('San Francisco CA US')
	print

from top_sites import *
site = 'http://en.wikipedia.org/wiki/List_of_most_popular_websites'
site = get_site(site)
parser = Site_Parser()
parser.feed(site)
site_list = parser.results
# strip out newlines ...
site_list = [ i for i in site_list if i != '\n' ]

ips = [ dig(i) for i in site_list ]
for i in site_list:
	ips.extend(dig(i))

# takes a long time:
address = [ get_address(i) for i in ips ]

iterate through sites:
	each site is a key:
		site:
			ips
				address
				latitude
				longitude


	



from pymongo import MongoClient

MONGODB_HOST = 'localhost'
MONGODB_PORT = 27017
DB_NAME = 'top_sites'
COLLECTION_NAME = 'sites'
connection = MongoClient(MONGODB_HOST, MONGODB_PORT)
collection = connection[DB_NAME][COLLECTION_NAME]

###################################################
software: git, apache, nagios, 
languages: python, javascript, perl, bash
frameworks: django, flask
database: oracle, mysql, mongodb





